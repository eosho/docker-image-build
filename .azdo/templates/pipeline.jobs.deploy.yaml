parameters:
  resourceGroupName: ''
  environmentName: ''
  region: ''
  prefix: ''
  vmImage: ''
  serviceConnection: ''
  validateDeployment: ''

jobs:
  - job: Deploy_Bicep
    displayName: 'Deploy_Bicep'
    pool:
      vmImage: "${{ parameters.vmImage }}"
    steps:
      - checkout: self
      - task: AzureCLI@2
        displayName: "Initialize Azure Credentials"
        inputs:
          azureSubscription: "$(serviceConnection)"
          scriptType: pscore
          scriptLocation: inlineScript
          addSpnToEnvironment: true
          inlineScript: |
            $subscriptionId=$(az account show --query id -o tsv)
            Write-Host "##vso[task.setvariable variable=ARM_TENANT_ID]$env:tenantId"
            Write-Host "##vso[task.setvariable variable=ARM_CLIENT_ID]$env:servicePrincipalId"
            Write-Host "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$subscriptionId"
            Write-Host "##vso[task.setvariable variable=ARM_CLIENT_SECRET;issecret=true]$env:servicePrincipalKey"

      - task: DownloadBuildArtifacts@0
        displayName: 'Download artifacts'
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'docker'
          downloadPath: '$(Build.ArtifactsDirectory)'

      - task: AzurePowerShell@5
        displayName: 'Deploy Bicep template'
        inputs:
          azureSubscription: '$(serviceConnection)'
          ScriptType: 'InlineScript'
          Inline: |
            # load module
            . $(System.DefaultWorkingDirectory)/orchestration/ImportModules.ps1

            . $(System.DefaultWorkingDirectory)/orchestration/orchestrationService/New-ARMDeployment.ps1

            $paramArgs = @{}
            if ('${{ parameters.validateDeployment }}' -eq 'true') {
              $paramArgs += @{
                Validate = $true
              }
            }

            $paramArgs += @{
              SubscriptionId        = "$(ARM_SUBSCRIPTION_ID)"
              DeploymentTemplate    = '$(Build.ArtifactsDirectory)/docker/bicep/main.json'
              DeploymentParamObject = @{
                resourceGroupName    = "$(resourceGroupName)"
                environmentName      = "$(environmentName)"
                prefix               = "$(prefix)"
                spnClientSecretValue = "$(ARM_CLIENT_SECRET)"
                spnClientIdValue     = "$(ARM_CLIENT_ID)"
                acrName              = "$(containerRegistryName)"
                aadObjectId          = "$(ARM_CLIENT_ID)"
              }
              Location              = "$(region)"
            }

            New-ARMDeployment @paramArgs
          azurePowerShellVersion: 'LatestVersion'
